import random
import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, Chat
from telegram.ext import (
    Application,
    CommandHandler,
    CallbackQueryHandler,
    MessageHandler,
    filters,
    ContextTypes,
)

# ===== ุฅุนุฏุงุฏุงุช ุนุงูุฉ =====
TOKEN = "8234553204:AAHt0_NotXPwMOgQsdOfUFRsB4vbv8tgjmI"
logging.basicConfig(level=logging.INFO)

# ===== ุจูุงูุงุช ุงููุญุชูู =====

QURAN_EXCERPTS = [
    ("ุงููุงุชุญุฉ", "ุงููุญูููุฏู ููููููู ุฑูุจูู ุงููุนูุงููููููู"),
    ("ุงูุฅุฎูุงุต", "ูููู ูููู ุงูููููู ุฃูุญูุฏู"),
    ("ุงูููุซุฑ", "ุฅููููุง ุฃูุนูุทูููููุงูู ุงููููููุซูุฑู"),
    ("ุงูุนุตุฑ", "ููุงููุนูุตูุฑู ุฅูููู ุงููุฅููุณูุงูู ููููู ุฎูุณูุฑู"),
    ("ุงูุฑุญูู", "ููุจูุฃูููู ุขููุงุกู ุฑูุจููููููุง ุชูููุฐููุจูุงูู"),
    ("ุงูุจูุฑุฉ", "ุงูููููู ููุง ุฅููููฐูู ุฅููููุง ูููู ุงููุญูููู ุงูููููููููู"),
    ("ุงูููุฑ", "ุงูููููู ูููุฑู ุงูุณููููุงููุงุชู ููุงููุฃูุฑูุถู"),
    ("ุงูุญุฏูุฏ", "ุงุนููููููุง ุฃูููู ุงูููููู ููุญูููู ุงููุฃูุฑูุถู ุจูุนูุฏู ููููุชูููุง"),
    ("ุงูุฃูุนุงู", "ูููููู ุนูููู ููููู ุดูููุกู ููุฏููุฑู"),
    ("ููุณู", "ุฅูููููู ููู ููุชูููู ููููุตูุจูุฑู ููุฅูููู ุงูููููู ููุง ููุถููุนู ุฃูุฌูุฑู ุงููููุญูุณูููููู"),
    ("ุงูุฒูุฑ", "ูููู ููุง ุนูุจูุงุฏููู ุงูููุฐูููู ุฃูุณูุฑููููุง ุนูููู ุฃููููุณููููู ููุง ุชูููููุทููุง ููู ุฑููุญูููุฉู ุงูููููู"),
    ("ุงูุฃุญุฒุงุจ", "ุฅูููู ุงูููููู ููููููุงุฆูููุชููู ููุตููููููู ุนูููู ุงููููุจูููู"),
    ("ุงูุชูุจุฉ", "ุฅูููู ุงูููููู ููุนู ุงูุตููุงุจูุฑูููู"),
    ("ุงูุญุฌุฑ", "ููุงุตูููุญู ุงูุตููููุญู ุงููุฌูููููู"),
    ("ุงููุฒูู", "ููุฑูุชูููู ุงููููุฑูุขูู ุชูุฑูุชููููุง"),
    ("ุงูุนููุจูุช", "ุฅูููู ุงูููููู ููููุฏูุงููุนู ุนููู ุงูููุฐูููู ุขูููููุง"),
    ("ุงูููู", "ุงูููุฐูู ุฎููููู ุงููููููุชู ููุงููุญูููุงุฉู"),
    ("ุงููุจุฃ", "ุนูููู ููุชูุณูุงุกูููููู"),
    ("ุงูุถุญู", "ููููุณููููู ููุนูุทูููู ุฑูุจูููู ููุชูุฑูุถูููฐ"),
    ("ุงูุดุฑุญ", "ููุฅูููู ููุนู ุงููุนูุณูุฑู ููุณูุฑูุง"),
]

HADITHS = [
    "ูุงู ๏ทบ: ยซุฅููุง ุงูุฃุนูุงู ุจุงูููุงุชยป",
    "ูุงู ๏ทบ: ยซุงูุฏูู ุงููุตูุญุฉยป",
    "ูุงู ๏ทบ: ยซุงููุณูู ูู ุณูู ุงููุณูููู ูู ูุณุงูู ููุฏูยป",
    "ูุงู ๏ทบ: ยซูู ูุง ููุฑุญู ูุง ููุฑุญูยป",
    "ูุงู ๏ทบ: ยซูู ุญุณู ุฅุณูุงู ุงููุฑุก ุชุฑูู ูุง ูุง ูุนูููยป",
    "ูุงู ๏ทบ: ยซุชุจุณูู ูู ูุฌู ุฃุฎูู ุตุฏูุฉยป",
    "ูุงู ๏ทบ: ยซุงุชู ุงููู ุญูุซูุง ููุชยป",
    "ูุงู ๏ทบ: ยซุงูุฑุคูุง ุงููุฑุขู ูุฅูู ูุฃุชู ุดููุนูุง ูุฃุตุญุงุจูยป",
    "ูุงู ๏ทบ: ยซุงูุฑูู ูุง ูููู ูู ุดูุก ุฅูุง ุฒุงููยป",
    "ูุงู ๏ทบ: ยซูู ุณูู ุทุฑูููุง ููุชูุณ ููู ุนูููุง ุณููู ุงููู ูู ุจู ุทุฑูููุง ุฅูู ุงูุฌูุฉยป",
    "ูุงู ๏ทบ: ยซูู ุชูุถุฃ ูุฃุญุณู ุงููุถูุก ุฎุฑุฌุช ุฎุทุงูุงู ูู ุฌุณุฏูยป",
    "ูุงู ๏ทบ: ยซุงููุคูู ูุฑุขุฉ ุฃุฎููยป",
    "ูุงู ๏ทบ: ยซุฎูุฑูู ูู ุชุนูู ุงููุฑุขู ูุนูููยป",
    "ูุงู ๏ทบ: ยซูู ูุงู ูุง ุฅูู ุฅูุง ุงููู ุฏุฎู ุงูุฌูุฉยป",
    "ูุงู ๏ทบ: ยซูู ุตุงู ุฑูุถุงู ุฅููุงููุง ูุงุญุชุณุงุจูุง ุบูุฑ ูู ูุง ุชูุฏู ูู ุฐูุจูยป",
    "ูุงู ๏ทบ: ยซุงูุทููุฑ ุดุทุฑ ุงูุฅููุงูยป",
    "ูุงู ๏ทบ: ยซุฅู ุงููู ุฌููู ูุญุจ ุงูุฌูุงูยป",
    "ูุงู ๏ทบ: ยซุงูุฏุนุงุก ูู ุงูุนุจุงุฏุฉยป",
    "ูุงู ๏ทบ: ยซูู ูุงู ูุคูู ุจุงููู ูุงูููู ุงูุขุฎุฑ ููููู ุฎูุฑูุง ุฃู ููุตูุชยป",
    "ูุงู ๏ทบ: ยซุฃูุฑุจ ูุง ูููู ุงูุนุจุฏ ูู ุฑุจู ููู ุณุงุฌุฏยป",
]

DUAS = [
    "ุงูููู ุงุฌุนู ุงููุฑุขู ุฑุจูุน ูููุจูุง ูููุฑ ุตุฏูุฑูุง.",
    "ุงูููู ุงุบูุฑ ููุง ุฐููุจูุง ููููุฑ ุนูุง ุณูุฆุงุชูุง.",
    "ุงูููู ุงุฑุฒููุง ุญุจู ูุญุจ ูู ูุญุจู.",
    "ุงูููู ุงุฌุนููุง ูู ุงูููุจูููู ูู ุงูุฏููุง ูุงูุขุฎุฑุฉ.",
    "ุงูููู ุฅูุง ูุณุฃูู ุงูุฌูุฉ ููุนูุฐ ุจู ูู ุงููุงุฑ.",
    "ุงูููู ุงุฑุฒููุง ุฑุฒููุง ุทูุจูุง ูุงุณุนูุง ูุจุงุฑููุง ููู.",
    "ุงูููู ุงุดู ูุฑุถุงูุง ููุฑุถู ุงููุณูููู.",
    "ุงูููู ุงุบูุฑ ููุงูุฏููุง ูุงุฑุญูููุง ููุง ุฑุจูุงูุง ุตุบุงุฑูุง.",
    "ุงูููู ุงุฌุนููุง ูู ุงูุฐุงูุฑูู ุงูุดุงูุฑูู.",
    "ุงูููู ุงุฌุนููุง ูู ุงูุฐูู ูุณุชูุนูู ุงูููู ููุชุจุนูู ุฃุญุณูู.",
    "ุงูููู ุจุงุฑู ููุง ูู ุฃุนูุงุฑูุง ูุฃุนูุงููุง.",
    "ุงูููู ุงุฌุนููุง ูู ุฃูููุงุฆู ุงูุตุงูุญูู.",
    "ุงูููู ุฃุตูุญ ุดุจุงุจ ุงููุณูููู.",
    "ุงูููู ูุฑูุฌ ููู ุงูููููููู.",
    "ุงูููู ุงุฌุนู ุขุฎุฑ ููุงููุง ูู ุงูุฏููุง ูุง ุฅูู ุฅูุง ุงููู.",
    "ุงูููู ููููุง ููุง ุชุญุจ ูุชุฑุถู.",
    "ุงูููู ุงุฌุนููุง ุณุจุจูุง ูู ูุฏุงูุฉ ุงููุงุณ.",
    "ุงูููู ุงูุชุจ ููุง ุญุณู ุงูุฎุงุชูุฉ.",
    "ุงูููู ุงุฌุนููุง ูู ุงูุตุงูุญูู ุงููุตูุญูู.",
    "ุงูููู ุงุฑุฒููุง ุชูุจุฉ ูุตูุญูุง ูุจู ุงูููุช.",
]

AZKAR = [
    "ุฃุณุชุบูุฑ ุงููู ุงูุนุธูู ูุฃุชูุจ ุฅููู.",
    "ุณุจุญุงู ุงูููุ ูุงูุญูุฏ ูููุ ููุง ุฅูู ุฅูุง ุงูููุ ูุงููู ุฃูุจุฑ.",
    "ุงูููู ุตู ูุณูู ุนูู ูุจููุง ูุญูุฏ.",
    "ูุง ุญูู ููุง ููุฉ ุฅูุง ุจุงููู.",
    "ุณุจุญุงู ุงููู ูุจุญูุฏูุ ุณุจุญุงู ุงููู ุงูุนุธูู.",
    "ุงุณุชุบูุฑ ุงููู ุงูุฐู ูุง ุฅูู ุฅูุง ูู ุงูุญู ุงููููู ูุฃุชูุจ ุฅููู.",
    "ุฑุถูุช ุจุงููู ุฑุจูุงุ ูุจุงูุฅุณูุงู ุฏูููุงุ ูุจูุญูุฏ ๏ทบ ูุจููุง.",
    "ุงูููู ุงุฌุนู ูููู ูุฐุง ุฎูุฑูุง ูู ุฃูุณู.",
    "ุงูููู ุฃุนูู ุนูู ุฐูุฑู ูุดูุฑู ูุญุณู ุนุจุงุฏุชู.",
    "ุงูููู ุฅูู ุธููุช ููุณู ูุงุบูุฑ ูู.",
    "ุงูููู ุงุฌุนููุง ูู ุงูุดุงูุฑูู.",
    "ุงูููู ุฅูุง ูุนูุฐ ุจู ูู ุงููู ูุงูุญุฒู.",
    "ุงูููู ุฅูุง ูุนูุฐ ุจู ูู ุงููุณู ูุงูุฌุจู.",
    "ุงูููู ุฅูุง ูุนูุฐ ุจู ูู ููุจ ูุง ูุฎุดุน.",
    "ุงูููู ุฅูุง ูุนูุฐ ุจู ูู ุนูู ูุง ูููุน.",
    "ุงูููู ุฐูุฑูุง ูุง ูุณููุง ูุนูููุง ูุง ุฌูููุง.",
    "ุงูููู ุงุฌุนููุง ูู ุงูุฐุงูุฑูู ุงููู ูุซูุฑูุง ูุงูุฐุงูุฑุงุช.",
    "ุงูููู ุงุฌุนููุง ูู ุนุจุงุฏู ุงูุตุงูุญูู.",
    "ุงูููู ููููุง ููุง ุชุญุจ ูุชุฑุถู.",
    "ุงูููู ุงุฌุนู ุงููุฑุขู ุงูุนุธูู ููุง ุฅูุงููุง ูููุฑูุง.",
]

# ======= ุงูุฃุฒุฑุงุฑ =======
def main_menu():
    buttons = [
        [InlineKeyboardButton("๐ ุขูุงุช ูู ุงููุฑุขู", callback_data="quran")],
        [InlineKeyboardButton("๐ ุฃุญุงุฏูุซ ูุจููุฉ", callback_data="hadith")],
        [InlineKeyboardButton("๐คฒ ุฃุฏุนูุฉ", callback_data="dua")],
        [InlineKeyboardButton("๐ข ูุณุจุญุฉ", callback_data="tasbih")],
    ]
    return InlineKeyboardMarkup(buttons)

def back_menu():
    return InlineKeyboardMarkup([[InlineKeyboardButton("โฉ๏ธ ุงูุฑุฌูุน ูููุงุฆูุฉ", callback_data="back")]])

def tasbih_keyboard(count: int):
    kb = [
        [
            InlineKeyboardButton(f"ุชุณุจูุญ โ ({count})", callback_data="tasbih_inc"),
            InlineKeyboardButton("โป๏ธ ุฅุนุงุฏุฉ ุถุจุท", callback_data="tasbih_reset"),
        ],
        [InlineKeyboardButton("โฉ๏ธ ุงูุฑุฌูุน", callback_data="back")],
    ]
    return InlineKeyboardMarkup(kb)

# ======= ุนูุฏ ุจุฏุก ุงูุจูุช =======
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = (
        "๐ฟ *ูุฑุญุจูุง ุจู ูู ุงูุจูุช ุงูุฅุณูุงูู!*\n\n"
        "๐ ุขูุงุชุ ๐ ุฃุญุงุฏูุซุ ๐คฒ ุฃุฏุนูุฉุ ๐ข ูุณุจุญุฉ\n"
        "ููุง ุฃุฑุณู ุงูุฃุฐูุงุฑ ุชููุงุฆููุง ูู ุงููุฌููุนุงุช ๐"
    )
    await update.message.reply_text(text, reply_markup=main_menu(), parse_mode="Markdown")

# ======= ุงูุชุนุงูู ูุน ุงูุฃุฒุฑุงุฑ =======
async def handle_buttons(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    data = query.data
    await query.answer()

    if data == "quran":
        s, v = random.choice(QURAN_EXCERPTS)
        await query.edit_message_text(f"๐ *{s}*\n\n{v}", parse_mode="Markdown", reply_markup=back_menu())
    elif data == "hadith":
        h = random.choice(HADITHS)
        await query.edit_message_text(f"๐ ุญุฏูุซ:\n\n{h}", reply_markup=back_menu())
    elif data == "dua":
        d = random.choice(DUAS)
        await query.edit_message_text(f"๐คฒ ุฏุนุงุก:\n\n{d}", reply_markup=back_menu())
    elif data == "tasbih":
        context.user_data["tasbih_count"] = 0
        await query.edit_message_text("๐ข ูุณุจุญุฉ ุชูุงุนููุฉ", reply_markup=tasbih_keyboard(0))
    elif data == "tasbih_inc":
        count = context.user_data.get("tasbih_count", 0) + 1
        context.user_data["tasbih_count"] = count
        await query.edit_message_reply_markup(reply_markup=tasbih_keyboard(count))
    elif data == "tasbih_reset":
        context.user_data["tasbih_count"] = 0
        await query.edit_message_reply_markup(reply_markup=tasbih_keyboard(0))
    elif data == "back":
        await query.edit_message_text("๐ฟ ุงูุฑุฌูุน ุฅูู ุงููุงุฆูุฉ:", reply_markup=main_menu())

# ======= ุนูุฏ ุงูุฅุถุงูุฉ ุฅูู ูุฌููุนุฉ =======
async def added_to_group(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat = update.message.chat
    if chat.type in [Chat.GROUP, Chat.SUPERGROUP]:
        await context.bot.send_message(
            chat_id=chat.id,
            text="๐ ุงูุณูุงู ุนูููู ูุฑุญูุฉ ุงููู ูุจุฑูุงุชู!\n"
                 "ุดูุฑุงู ูุฅุถุงูุฉ ุงูุจูุช ๐ค\n"
                 "ุณุฃุฑุณู ููุง ุฃุฏุนูุฉ ูุฃุฐูุงุฑูุง ุชููุงุฆููุง ูู ุณุงุนุฉ ุจุฅุฐู ุงููู.",
        )
        context.job_queue.run_repeating(send_auto_zekr, interval=3600, first=10, chat_id=chat.id)

# ======= ูุธููุฉ ุงูุฅุฑุณุงู ุงูุชููุงุฆู =======
async def send_auto_zekr(context: ContextTypes.DEFAULT_TYPE):
    zekr = random.choice(DUAS + AZKAR)
    await context.bot.send_message(chat_id=context.job.chat_id, text=f"๐ {zekr}")

# ======= ุงูุชุดุบูู =======
def main():
    app = Application.builder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(handle_buttons))
    app.add_handler(MessageHandler(filters.StatusUpdate.NEW_CHAT_MEMBERS, added_to_group))
    print("โ Bot is running...")
    app.run_polling()

if __name__ == "__main__":
    main()